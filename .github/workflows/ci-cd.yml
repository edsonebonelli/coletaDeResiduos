name: Java CI/CD com Docker

on:
  push:
    branches: [ "main", "staging" ]
  workflow_dispatch:

env:
  IMAGE_NAME: coleta-de-residuos

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build do projeto com Maven
        run: mvn clean package -DskipTests

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build da imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:${{ github.ref_name }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:${{ github.ref_name }} ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

      - name: Push da imagem para o Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:${{ github.ref_name }}
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging' || startsWith(github.ref, 'refs/heads/main')
    steps:
      - name: Deploy remoto via SSH
        run: |
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << EOF
            docker pull ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest
            docker stop app || true
            docker rm app || true
            docker run -d --name app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest
          EOF
